// Function to update the related Service Request record with key values from a Survey Results record
void automation.Survey_Results_Update_Estimate_Value_In_Service_Request(Int survey_id)
{
    // Step 1: Get the Survey Results record using its ID
    survey_details = zoho.crm.getRecordById("Survey_Results", survey_id);

    // Step 2: Extract the estimated value of tortoises
    estimateValue = survey_details.get("Estimated_Number_of_Tortoises");

    // Step 3: Get the related Service Request ID from the lookup field
    surveyRequestId = survey_details.get("Service_Request").getJSON("id");

    // Step 4: Extract ecological and field-specific values from the survey
    total_number_of_burrows = survey_details.get("Total_Number_of_Burrow_s");
    total_number_of_burrows_s1 = survey_details.get("Total_Number_of_Burrow_s1");
    active_number_of_burrows = survey_details.get("Active_number_of_Burrow_s");
    estimated_number_of_tortoises = survey_details.get("Estimated_Number_of_Tortoises");
    number_of_owls_observed = survey_details.get("Number_of_Owls_observed");
    wetland = survey_details.get("Wetland1");
    mangroves = survey_details.get("Mangrovess");
    total_acres = survey_details.get("Total_Acres");
    number_of_potential_heritage_trees = survey_details.get("Number_of_Potential_Heritage_Trees");
    scrub_jay_designated = survey_details.get("Scrub_Jay_Designated");
    bald_eagle_nest_activity = survey_details.get("Bald_Eagle_Nest_Activity");
    distance_ft = survey_details.get("Distance_ft");
    other = survey_details.get("Other");
    inspection_date = ifnull(survey_details.getJSON("Inspection_Date"), "");
    barrowing_owl_present = ifnull(survey_details.getJSON("Barrowing_Owl_Present"), "");

    // Step 5: Create a map to hold the field values that need to be updated in the Service Request
    serviceRequest_Map = Map();
    serviceRequest_Map.put("Total_Number_of_Burrow_s", total_number_of_burrows);
    serviceRequest_Map.put("Total_number_of_Active_Burrows", total_number_of_burrows_s1);
    serviceRequest_Map.put("Active_number_of_Burrow_s", active_number_of_burrows);
    serviceRequest_Map.put("Estimated_Number_of_Tortoises1", estimated_number_of_tortoises);
    serviceRequest_Map.put("Number_of_Owls", number_of_owls_observed.toString());
    serviceRequest_Map.put("Wetland", wetland);
    serviceRequest_Map.put("Mangroves", mangroves);
    serviceRequest_Map.put("Total_Acres1", total_acres);
    serviceRequest_Map.put("Number_of_Potential_Heritage_Trees", number_of_potential_heritage_trees);
    serviceRequest_Map.put("Scrub_Jay_Designated", scrub_jay_designated);
    serviceRequest_Map.put("Bald_Eagle_Nest_Activity", bald_eagle_nest_activity);
    serviceRequest_Map.put("Distance_ft", distance_ft);
    serviceRequest_Map.put("Other", other);
    serviceRequest_Map.put("Inspection_Date", inspection_date);
    serviceRequest_Map.put("Barrowing_Owl_Present", barrowing_owl_present);

    // Step 6: Also update the main Estimated_Number_of_Tortoises field
    serviceRequest_Map.put("Estimated_Number_of_Tortoises", estimateValue);

    // Step 7: Update the related Service Request record with the compiled data map
    updateRecord = zoho.crm.updateRecord("Service_Request", surveyRequestId, serviceRequest_Map, {"trigger":{"workflow"}});
    info updateRecord;

    // Step 8: Retrieve the updated Service Request again to fetch the related Project ID
    service_request_details = zoho.crm.getRecordById("Service_Request", surveyRequestId);
    project_name = service_request_details.getJSON("Project_Name");

    if (project_name != null)
    {
        // Step 9: Extract the project ID from the Project_Name lookup field
        project_id = project_name.getJSON("id");
        info project_id;
    }

    // Step 10: Update the Survey Results record with the related Project ID to maintain referential integrity
    survey_result_map = Map();
    survey_result_map.put("Project_Name", project_id);

    update_survey_result = zoho.crm.updateRecord("Survey_Results", survey_id, survey_result_map, {"trigger":{"workflow"}});
    info update_survey_result;
}
